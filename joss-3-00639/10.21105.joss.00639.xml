<?xml version="1.0" encoding="utf-8" ?>
<article>
  <articleinfo>
    <title>LearnSAT: A SAT Solver for Education</title>
    <authors>
      <author>
        <name>Mordechai (Moti) Ben-Ari</name>
        <orcid>0000-0002-2091-5107</orcid>
        <affiliation>
          <orgname>
            1
          </orgname>
        </affiliation>
      </author>
    </authors>
    <tags>
      <tag>SAT solving</tag>
      <tag>computer science education</tag>
      <tag>Prolog</tag>
    </tags>
    <date>25 February 2018</date>
    <paper_doi>10.21105/joss.00639</paper_doi>
    <software_repository>https://github.com/motib/LearnSAT</software_repository>
    <software_archive>http://dx.doi.org/10.5281/zenodo.1230536</software_archive>
    <paper_url>http://www.theoj.org/joss-papers/joss.00639/10.21105.joss.00639.pdf</paper_url>
  </articleinfo>
  <body>
    <h1 id="summary">Summary</h1>
    <p>Many problems can be solved by encoding them as formulas in propositional logic which are checked for satisfiability by a program called a SAT solver. If found, a satisfying assignment provides the answer to the problem. Donald Knuth <span class="citation" data-cites="knuth-sat">(Knuth 2015)</span> calls SAT solvers a <em>killer app</em> because diverse practical problems can be solved by a single, highly-optimized, program. Despite their importance, SAT solvers are described only in research papers. LearnSAT is designed for teaching and learning SAT solving by providing a concise, well-documented, implementation, fine-grained tracing (both textual and graphical) of the algorithms and a detailed tutorial.</p>
    <p>LearnSAT implements the core algorithms of modern SAT solvers <span class="citation" data-cites="SAT">(Biere et al. 2009)</span>: the Davis-Putnam-Logemann-Loveland (DPLL) algorithm with conflict-driven clause learning (CDCL) and non-chronological backtracking (NCB). CDCL is implemented by backwards resolution from a conflict clause to a unique implication point (UIP) <span class="citation" data-cites="mlm">(Marques-Silva, Lynce, and Malik 2009)</span>. It is also possible to compute dominators in the implication graph. In addition, two heuristics for lookahead are implemented.</p>
    <p>The user of LearnSAT can choose any subset of 24 display options in order to tailor the output to a specific learning context. The display options include elementary steps like decision assignments, unit propagations and identifying conflict clauses, as well as the advanced steps of CDCL: the resolution steps used to obtain a learned clause and the search for UIPs.</p>
    <p>LearnSAT can generate two types of graphs that are rendered using the <code>dot</code> tool: trees showing the search through the assignments and implication graphs that display the process for learning clauses from conflicts.</p>
    <p>LearnSAT is implemented in Prolog and was developed using <code>SWI-Prolog</code> which available for Windows, MacOSX and Linux, although almost all the source code is compatible with the standard.</p>
    <p>Three documents are included in the project: * <code>learnsat-overview</code> An overview of LearnSAT. * <code>learnsat-ug</code> User’s guide and software documentation. * <code>learnsat-tutorial</code> Tutorial on SAT solving using LearnSAT.</p>
    <p>About 20 examples are included of encodings of problems that can be solved by LearnSAT.</p>
    <h2 id="references" class="unnumbered">References</h2>
    <div id="refs" class="references">
    <div id="ref-SAT">
    <p>Biere, A., M. Heule, H. Van Maaren, and T. Walsh, eds. 2009. <em>Handbook of Satisfiability</em>. IOS Press.</p>
    </div>
    <div id="ref-knuth-sat">
    <p>Knuth, D.E. 2015. <em>The Art of Computer Programming, Volume 4, Fascicle 6: Satisfiability</em>. Pearson.</p>
    </div>
    <div id="ref-mlm">
    <p>Marques-Silva, J. P., I. Lynce, and S. Malik. 2009. “Conflict-Driven Clause Learning Sat Solvers.” In <em>Handbook of Satisfiability</em>, edited by A. Biere, M. Heule, H. Van Maaren, and T. Walsh, 131–53. IOS Press. <a href="https://doi.org/10.3233/978-1-58603-929-5-131" class="uri">https://doi.org/10.3233/978-1-58603-929-5-131</a>.</p>
    </div>
    </div>
  </body>
</article>
