<?xml version="1.0" encoding="utf-8" ?>
<article>
  <articleinfo>
    <title>Eclipse Golo</title>
    <authors>
      <author>
        <name>Julien Ponge</name>
        <orcid>0000-0003-3452-9183</orcid>
        <affiliation>
          <orgname>
            1
          </orgname>
        </affiliation>
      </author>
      <author>
        <name>Yannick Loiseau</name>
        <affiliation>
          <orgname>
            2
          </orgname>
        </affiliation>
      </author>
      <author>
        <name>Frédéric Le Mouël</name>
        <affiliation>
          <orgname>
            1
          </orgname>
        </affiliation>
      </author>
      <author>
        <name>Nicolas Stouls</name>
        <affiliation>
          <orgname>
            1
          </orgname>
        </affiliation>
      </author>
      <author>
        <name>Philippe Charrière</name>
        <affiliation>
          <orgname>
            6
          </orgname>
        </affiliation>
      </author>
      <author>
        <name>Daniel Petisme</name>
        <affiliation>
          <orgname>
            3
          </orgname>
        </affiliation>
      </author>
      <author>
        <name>Sylvain Desgrais</name>
        <affiliation>
          <orgname>
            4
          </orgname>
        </affiliation>
      </author>
      <author>
        <name>Franck Verrot</name>
        <affiliation>
          <orgname>
            5
          </orgname>
        </affiliation>
      </author>
    </authors>
    <tags>
      <tag>golo</tag>
      <tag>java</tag>
      <tag>jvm</tag>
      <tag>language</tag>
      <tag>invokedynamic</tag>
      <tag>jsr292</tag>
    </tags>
    <date>23 September 2016</date>
    <paper_doi>10.21105/joss.00093</paper_doi>
    <software_repository>https://github.com/eclipse/golo-lang</software_repository>
    <software_archive>http://dx.doi.org/10.5281/zenodo.192097</software_archive>
    <paper_url>https://github.com/openjournals/joss-papers/blob/master/joss.00093/10.21105.joss.00093.pdf</paper_url>
  </articleinfo>
  <body>
    <h1 id="summary">Summary</h1>
    <p>Golo is a simple dynamically-typed programming language for the Java Virtual Machine (JVM) that has been designed to leverage the capabilities of the Java 7 invokedynamic bytecode instruction and java.lang.invoke API (JSR 292) <span class="citation">(Ponge, Le Mouël, and Stouls 2013)</span> <span class="citation">(Thalinger and Rose 2010)</span>. Coupled with a minimal runtime that directly uses the Java SE API, Golo is an interesting language for rapid prototyping, polyglot application embedding, research (e.g., runtime extensions, language prototyping) and teaching (e.g., programming, dynamic language runtime implementation) <span class="citation">(Maingret et al. 2015)</span> <span class="citation">(Ponge et al. 2015)</span>.</p>
    <h1 id="references" class="unnumbered">References</h1>
    <div id="refs" class="references">
    <div id="ref-Maingret:2015:TDC:2786545.2786552">
    <p>Maingret, Baptiste, Frédéric Le Mouël, Julien Ponge, Nicolas Stouls, Jian Cao, and Yannick Loiseau. 2015. “Towards a Decoupled Context-Oriented Programming Language for the Internet of Things.” In <em>Proceedings of the 7th International Workshop on Context-Oriented Programming</em>, 7:1–7:6. COP’15. New York, NY, USA: ACM. doi:<a href="https://doi.org/10.1145/2786545.2786552">10.1145/2786545.2786552</a>.</p>
    </div>
    <div id="ref-Ponge:2013:GDL:2500828.2500844">
    <p>Ponge, Julien, Frédéric Le Mouël, and Nicolas Stouls. 2013. “Golo, a Dynamic, Light and Efficient Language for Post-Invokedynamic Jvm.” In <em>Proceedings of the 2013 International Conference on Principles and Practices of Programming on the Java Platform: Virtual Machines, Languages, and Tools</em>, 153–58. PPPJ ’13. New York, NY, USA: ACM. doi:<a href="https://doi.org/10.1145/2500828.2500844">10.1145/2500828.2500844</a>.</p>
    </div>
    <div id="ref-DBLP:journals/corr/PongeMSL15">
    <p>Ponge, Julien, Frédéric Le Mouël, Nicolas Stouls, and Yannick Loiseau. 2015. “Opportunities for a Truffle-Based Golo Interpreter.” <em>CoRR</em> abs/1505.06003. <a href="http://arxiv.org/abs/1505.06003" class="uri">http://arxiv.org/abs/1505.06003</a>.</p>
    </div>
    <div id="ref-Thalinger:2010:OI:1852761.1852763">
    <p>Thalinger, Christian, and John Rose. 2010. “Optimizing Invokedynamic.” In <em>Proceedings of the 8th International Conference on the Principles and Practice of Programming in Java</em>, 1–9. PPPJ ’10. New York, NY, USA: ACM. doi:<a href="https://doi.org/10.1145/1852761.1852763">10.1145/1852761.1852763</a>.</p>
    </div>
    </div>
  </body>
</article>
