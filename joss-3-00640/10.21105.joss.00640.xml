<?xml version="1.0" encoding="utf-8" ?>
<article>
  <articleinfo>
    <title>MCMCvis: Tools to Visualize, Manipulate, and Summarize MCMC Output</title>
    <authors>
      <author>
        <name>Casey Youngflesh</name>
        <orcid>0000-0001-6343-3311</orcid>
        <affiliation>
          <orgname>
            1
          </orgname>
        </affiliation>
      </author>
    </authors>
    <tags>
      <tag>MCMC</tag>
      <tag>Bayesian</tag>
      <tag>Visualization</tag>
      <tag>PPO</tag>
    </tags>
    <date>16 February 2018</date>
    <paper_doi>10.21105/joss.00640</paper_doi>
    <software_repository>https://github.com/caseyyoungflesh/MCMCvis</software_repository>
    <software_archive>http://dx.doi.org/10.5281/zenodo.1216120</software_archive>
    <paper_url>http://www.theoj.org/joss-papers/joss.00640/10.21105.joss.00640.pdf</paper_url>
  </articleinfo>
  <body>
    <h1 id="summary">Summary</h1>
    <p>MCMCvis is an R <span class="citation" data-cites="R">(R Core Team 2018)</span> package to used to visualize, manipulate, and summarize MCMC output. MCMC output may be derived from Bayesian model output fit with JAGS <span class="citation" data-cites="JAGS">(Plummer 2003)</span>, Stan <span class="citation" data-cites="Stan">(Carpenter et al. 2017)</span>, or other MCMC samplers. MCMCvis was designed to perform key functions for MCMC analysis using minimal code, in order to free up time/brainpower for interpretation of analysis results. Functions support simple and straightforward subsetting of model parameters within the calls, and produce presentable and ‘publication-ready’ output.</p>
    <p>The package contains five functions:</p>
    <ul>
    <li>MCMCsummary - summarize MCMC output for particular parameters of interest</li>
    <li>MCMCpstr - summarize MCMC output for particular parameters of interest while preserving parameter structure</li>
    <li>MCMCtrace - create trace and density plots of MCMC chains for particular parameters of interest</li>
    <li>MCMCchains - easily extract posterior chains from MCMC output for particular parameters of interest</li>
    <li>MCMCplot - create caterpillar plots from MCMC output for particular parameters of interest</li>
    </ul>
    <h2 id="installation">Installation</h2>
    <p>The released version of MCMCvis can be installed from CRAN with:</p>
    <pre class="{r}"><code>install.packages(&#39;MCMCvis&#39;)</code></pre>
    <p>Or the latest, development version from Github with:</p>
    <pre class="{r}"><code>install.packages(&#39;devtools&#39;)
    devtools::install_github(&#39;caseyyoungflesh/MCMCvis&#39;, build_vignettes = TRUE)</code></pre>
    <h2 id="vignette">Vignette</h2>
    <p>The vignette for this package can be run using:</p>
    <pre class="{r}"><code>vignette(&#39;MCMCvis&#39;)</code></pre>
    <h2 id="examples">Examples</h2>
    <h4 id="summarize">Summarize</h4>
    <p>Output summary information from MCMC output. Rhat values and number of effective samples (if specified) can be output to assess convergence of chains. Parameters of interest can be specified in order to only display the desired information.</p>
    <pre class="{r}"><code>data(MCMC_data)
    MCMCsummary(MCMC_data, params = &#39;beta&#39;, n.eff = TRUE)
    #&gt;           mean   sd   2.5%    50%  97.5% Rhat n.eff
    #&gt; beta[1]  -13.83 5.53 -24.67 -13.78  -2.96    1 18000
    #&gt; beta[2]   -5.60 0.14  -5.88  -5.60  -5.32    1 17868
    #&gt; beta[3]  -16.82 1.71 -20.15 -16.82 -13.45    1 18279
    #&gt; beta[4]  -19.55 2.61 -24.59 -19.55 -14.41    1 17714
    #&gt; beta[5]    8.68 5.26  -1.66   8.69  19.04    1 18435
    #&gt; beta[6]    2.86 7.68 -12.04   2.83  17.93    1 17754
    #&gt; beta[7]    2.06 7.78 -13.11   2.01  17.27    1 18000
    #&gt; beta[8]  -15.95 3.62 -23.08 -15.93  -8.93    1 17904
    #&gt; beta[9]    8.44 4.64  -0.69   8.44  17.58    1 17949
    #&gt; beta[10]  16.69 4.36   8.24  16.66  25.40    1 18993</code></pre>
    <h4 id="evaluate">Evaluate</h4>
    <p>Assess convergence by checking posterior chains. Prior posterior overlap (PPO) can be easily assessed by supplying an argument to the function. The degree of overlap is plotted and calculated to determine how informative the data was for the posterior distribution, in relation to the prior distribution used in the model.</p>
    <pre class="{r}"><code>PR &lt;- rnorm(15000, 0, 32)
    MCMCtrace(MCMC_data, params = &#39;beta\\[1\\]&#39;, ISB = FALSE, priors = PR)</code></pre>
    <p><img src="../Evaluate_ex.png" /></p>
    <h4 id="manipulate">Manipulate</h4>
    <p>Extract posterior chains for parameters of interest. In this way, large MCMC objects can be subset to smaller, more manageable, objects. Ouput can be in matrix format, or ‘mcmc.list’ format.</p>
    <pre class="{r}"><code>just_betas_mcmc_obj &lt;- MCMCchains(MCMC_data, params = &#39;beta&#39;, mcmc.list = TRUE)</code></pre>
    <h4 id="visualize">Visualize</h4>
    <p>Easily visualize posterior output for parameters of interest using caterpillar plots. A number of plotting options exist to make sure the desired plot is created.</p>
    <pre class="{r}"><code>MCMCplot(MCMC_data, 
           params = &#39;beta&#39;, 
           rank = TRUE,
           horiz = FALSE)</code></pre>
    <p><img src="../Viz_ex.png" /></p>
    <h1 id="references" class="unnumbered">References</h1>
    <div id="refs" class="references">
    <div id="ref-Stan">
    <p>Carpenter, Bob, Andrew Gelman, Matthew Hoffman, Daniel Lee, Ben Goodrich, Michael Betancourt, Marcus Brubaker, Jiqiang Guo, Peter Li, and Allen Riddell. 2017. “Stan: A Probabilistic Programming Language.” <em>Journal of Statistical Software, Articles</em> 76 (1):1–32. <a href="https://doi.org/10.18637/jss.v076.i01" class="uri">https://doi.org/10.18637/jss.v076.i01</a>.</p>
    </div>
    <div id="ref-JAGS">
    <p>Plummer, Martyn. 2003. “JAGS: A Program for Analysis of Bayesian Graphical Models Using Gibbs Sampling.”</p>
    </div>
    <div id="ref-R">
    <p>R Core Team. 2018. <em>R: A Language and Environment for Statistical Computing</em>. Vienna, Austria: R Foundation for Statistical Computing. <a href="https://www.R-project.org" class="uri">https://www.R-project.org</a>.</p>
    </div>
    </div>
  </body>
</article>
