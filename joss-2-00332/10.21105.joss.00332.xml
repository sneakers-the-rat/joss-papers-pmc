<?xml version="1.0" encoding="utf-8" ?>
<article>
  <articleinfo>
    <title>The country converter coco - a Python package for converting country names between different classification schemes</title>
    <authors>
      <author>
        <name>Konstantin Stadler</name>
        <orcid>0000-0002-1548-201X</orcid>
        <affiliation>
          <orgname>
            1
          </orgname>
        </affiliation>
      </author>
    </authors>
    <tags>
      <tag>country classifications</tag>
      <tag>regular expressions</tag>
      <tag>geography</tag>
    </tags>
    <date>12 July 2017</date>
    <paper_doi>10.21105/joss.00332</paper_doi>
    <software_repository>https://github.com/konstantinstadler/country_converter</software_repository>
    <software_archive>http://dx.doi.org/10.5281/zenodo.838248</software_archive>
    <paper_url>https://github.com/openjournals/joss-papers/raw/master/joss.00332/10.21105.joss.00332.pdf</paper_url>
  </articleinfo>
  <body>
    <h1 id="summary">Summary</h1>
    <p>Gathering the data basis for regional to global models and scenarios in many scientific fields regularly requires the parsing of multiple data sources. In particular for data related to economic (national accounts, trade statistics, etc.) and environmental (climate, ecosystem descriptions, etc.) variables, these data are mostly categorised per country. There is, however, no single standard of how to name or specify individual countries. As a consequence, parsing routines need to be adopted for each used data source.</p>
    <p>Of the existing standards, ISO 3166-1 (see <span class="citation">(“ISO 3166-1” 2017)</span>) defines a two and a three letter code in addition to a numerical classification. The UN uses its own numerical classification scheme, mostly based on the ISO 3166-1 numerical code. To further complicate the matter, instead of using one of the existing standards, many databases use unstandardised country names to classify countries. For example, South Korea might be referred to as &quot;Korea&quot;, &quot;Korea, Republic of&quot;, &quot;Republic of Korea&quot; or &quot;Korea, Rep.&quot; and must be distinguished from the various names of North Korea: &quot;Democratic People's Republic of Korea&quot;, &quot;Dem. People's Rep. of Korea&quot;, &quot;Korea, Dem. Rep.&quot;.</p>
    <p>In a research project relying on multiple data sources, one usually decides on one standard name or abbreviation to be used throughout the project and then provide conversion routines for matching all encountered country names and abbreviations into the master classification.</p>
    <p>The country converter (coco - a Python3 programme) aims to automate this step by providing a fully tested conversion set between the different country abbreviations standards and unstandardised country names.</p>
    <p>The basis of coco is a table of regular expression which match all English versions of country names encountered by the author. The included tests match the regular expression against all so far encountered names, checking for unique matching between regular expression and country names and vice versa.</p>
    <p>The table of regular expression and linked country names and classification can be extended by passing additional tables to account for databases using erroneous country codes or names.</p>
    <p>In addition to the one to one matching, coco includes regional country classifications based on continent, UN region, OECD membership (per year), UN membership (per year), EU membership (per year) as well as classification of the Rest of the World countries (<span class="citation">Stadler, Steen-Olsen, and Wood (2014)</span>) in the Multi Regional Input Output Databases EXIOBASE (<span class="citation">Wood et al. (2014)</span>) and WIOD (<span class="citation">Timmer et al. (2012)</span>).</p>
    <p>Coco can be used in Python and also provides a command line interface. Examples of how to use coco in Matlab(c) are provided in the Readme. An accompanying IPython notebook provides some instruction for advanced usage.</p>
    <h1 id="references" class="unnumbered">References</h1>
    <div id="refs" class="references">
    <div id="ref-_iso_2017">
    <p>“ISO 3166-1.” 2017. <em>Wikipedia</em>. <a href="https://en.wikipedia.org/w/index.php?title=ISO_3166-1&amp;oldid=785413591" class="uri">https://en.wikipedia.org/w/index.php?title=ISO_3166-1&amp;oldid=785413591</a>.</p>
    </div>
    <div id="ref-stadler_rest_2014">
    <p>Stadler, Konstantin, Kjartan Steen-Olsen, and Richard Wood. 2014. “The ‘Rest of the World’ – Estimating the Economic Structure of Missing Regions in Global Multi-Regional Input-Output Tables.” <em>Economic Systems Research</em> 26 (3): 303–26. doi:<a href="https://doi.org/10.1080/09535314.2014.936831">10.1080/09535314.2014.936831</a>.</p>
    </div>
    <div id="ref-timmer_world_2012">
    <p>Timmer, Marcel, Abdul A. Erumban, Reitze Gouma, Bart Los, Umed Temurshoev, Gaaitzen J. de Vries, Iñaki Arto, et al. 2012. “The World Input-Output Database (WIOD).” <em>Working Paper Number: 10</em>. <a href="http://www.wiod.org/publications/papers/wiod10.pdf" class="uri">http://www.wiod.org/publications/papers/wiod10.pdf</a>.</p>
    </div>
    <div id="ref-wood_global_2014">
    <p>Wood, Richard, Konstantin Stadler, Tatyana Bulavskaya, Stephan Lutter, Stefan Giljum, Arjan de Koning, Jeroen Kuenen, et al. 2014. “Global Sustainability Accounting—Developing EXIOBASE for Multi-Regional Footprint Analysis.” <em>Sustainability</em> 7 (1): 138–63. doi:<a href="https://doi.org/10.3390/su7010138">10.3390/su7010138</a>.</p>
    </div>
    </div>
  </body>
</article>
