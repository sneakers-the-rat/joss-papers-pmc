<?xml version="1.0" encoding="utf-8" ?>
<article>
  <articleinfo>
    <title>Retriever: Data Retrieval Tool</title>
    <authors>
      <author>
        <name>Henry Kironde</name>
        <orcid>0000-0001-7105-5808</orcid>
        <affiliation>
          <orgname>
            1
          </orgname>
        </affiliation>
      </author>
      <author>
        <name>Benjamin D. Morris</name>
        <orcid>0000-0003-4418-1360</orcid>
      </author>
      <author>
        <name>Akash Goel</name>
        <orcid>0000-0001-9878-0401</orcid>
        <affiliation>
          <orgname>
            3
          </orgname>
        </affiliation>
      </author>
      <author>
        <name>Andrew Zhang</name>
        <orcid>0000-0003-1148-7734</orcid>
        <affiliation>
          <orgname>
            4
          </orgname>
        </affiliation>
      </author>
      <author>
        <name>Akshay Narasimha</name>
        <orcid>0000-0002-3901-2610</orcid>
        <affiliation>
          <orgname>
            5
          </orgname>
        </affiliation>
      </author>
      <author>
        <name>Shivam Negi</name>
        <orcid>0000-0002-5637-0479</orcid>
        <affiliation>
          <orgname>
            6
          </orgname>
        </affiliation>
      </author>
      <author>
        <name>David J. Harris</name>
        <orcid>0000-0003-3332-9307</orcid>
        <affiliation>
          <orgname>
            4
          </orgname>
        </affiliation>
      </author>
      <author>
        <name>Deborah Gertrude Digges</name>
        <orcid>0000-0002-7840-5054</orcid>
      </author>
      <author>
        <name>Kapil Kumar</name>
        <orcid>0000-0002-2292-1033</orcid>
        <affiliation>
          <orgname>
            7
          </orgname>
        </affiliation>
      </author>
      <author>
        <name>Amritanshu Jain</name>
        <orcid>0000-0003-1187-7900</orcid>
        <affiliation>
          <orgname>
            5
          </orgname>
        </affiliation>
      </author>
      <author>
        <name>Kunal Pal</name>
        <orcid>0000-0002-9657-0053</orcid>
        <affiliation>
          <orgname>
            8
          </orgname>
        </affiliation>
      </author>
      <author>
        <name>Kevinkumar Amipara</name>
        <orcid>0000-0001-5021-2018</orcid>
        <affiliation>
          <orgname>
            9
          </orgname>
        </affiliation>
      </author>
      <author>
        <name>Prabh Simran Singh Baweja</name>
        <orcid>0000-0003-3997-4470</orcid>
      </author>
      <author>
        <name>Ethan P. White</name>
        <orcid>0000-0001-6728-7745</orcid>
        <affiliation>
          <orgname>
            1, 2
          </orgname>
        </affiliation>
      </author>
    </authors>
    <tags>
      <tag>data retrieval, data processing, python, data, data science, datasets</tag>
    </tags>
    <date>16 September 2017</date>
    <paper_doi>10.21105/joss.00451</paper_doi>
    <software_repository>https://github.com/weecology/retriever</software_repository>
    <software_archive>http://dx.doi.org/10.5281/zenodo.1038272</software_archive>
    <paper_url>http://www.theoj.org/joss-papers/joss.00451/10.21105.joss.00451.pdf</paper_url>
  </articleinfo>
  <body>
    <h1 id="summary">Summary</h1>
    <p>The Data Retriever automates the first steps in the data analysis workflow by downloading, cleaning, and standardizing tabular datasets, and importing them into relational databases, flat files, or programming languages <span class="citation">(Morris and White 2013)</span>. The automation of this process reduces the time for a user to get most large datasets up and running by hours to days.The retriever uses a plugin infrastructure for both datasets and storage backends. New datasets that are relatively well structured can be added adding a JSON file following the Frictionless Data tabular data metadata package standard <span class="citation">(frictionlessdata 2017)</span>. More complex datasets can be added using a Python script to handle complex data cleaning and merging tasks and then defining the metadata associated with the cleaned tables. New storage backends can be added by overloading a general class with details for storing the data in new file formats or database management systems. The retriever has both a Python API and a command line interface. An R package that wraps the command line interface and a Julia package that wraps the Python API are also available.</p>
    <p>The 2.0 and 2.1 releases add extensive new functionality. This includes the Python API, the use of the Frictionless Data metadata standard, Python 3 support, JSON and XML backends, and autocompletion for the command line interface.</p>
    <h1 id="references" class="unnumbered">References</h1>
    <div id="refs" class="references">
    <div id="ref-frictionlessdata_specs">
    <p>frictionlessdata. 2017. “Specs: Specifications for Frictionless Data.” <a href="https://github.com/frictionlessdata/specs" class="uri">https://github.com/frictionlessdata/specs</a>.</p>
    </div>
    <div id="ref-Morris2013">
    <p>Morris, Benjamin D., and Ethan P. White. 2013. “The Ecodata Retriever: Improving Access to Existing Ecological Data.” <em>PLoS ONE</em>, June. Public Library of Science (PLoS). doi:<a href="https://doi.org/10.1371/journal.pone.0065848">10.1371/journal.pone.0065848</a>.</p>
    </div>
    </div>
  </body>
</article>
