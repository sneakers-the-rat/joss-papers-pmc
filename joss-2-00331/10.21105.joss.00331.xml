<?xml version="1.0" encoding="utf-8" ?>
<article>
  <articleinfo>
    <title>Pyrgg: Python Random Graph Generator</title>
    <authors>
      <author>
        <name>Sepand Haghighi</name>
        <orcid>0000-0001-9450-2375</orcid>
        <affiliation>
          <orgname>
            1
          </orgname>
        </affiliation>
      </author>
    </authors>
    <tags>
      <tag>graph</tag>
      <tag>script</tag>
      <tag>generator</tag>
      <tag>processing</tag>
      <tag>random</tag>
    </tags>
    <date>18 July 2017</date>
    <paper_doi>10.21105/joss.00331</paper_doi>
    <software_repository>https://github.com/sepandhaghighi/pyrgg</software_repository>
    <software_archive>http://dx.doi.org/10.5281/zenodo.845502</software_archive>
    <paper_url>https://github.com/openjournals/joss-papers/raw/master/joss.00331/10.21105.joss.00331.pdf</paper_url>
  </articleinfo>
  <body>
    <h1 id="summary">Summary</h1>
    <p>Pyrgg is an easy-to-use synthetic random graph generator written in Python which supports various graph file formats including DIMACS .gr files. Pyrgg has the ability to generate graphs of different sizes and is designed to provide input files for broad range of graph-based research applications, including but not limited to testing, benchmarking and performance-analysis of graph processing frameworks. <span class="citation">(Zhong and He 2012; Chakrabarti, Zhan, and Faloutsos 2004)</span><br />
    Pyrgg target audiences are computer scientists who study graph algorithms and graph processing frameworks.</p>
    <p>Graph Specifications :</p>
    <ul>
    <li>Weighted</li>
    <li>Signed</li>
    <li>Self Loop</li>
    <li>Parallel Arc</li>
    <li>Sparse</li>
    <li>Dense</li>
    </ul>
    <p>Supported Formats:</p>
    <ul>
    <li>DIMACS(.gr)</li>
    <li>CSV(.csv)</li>
    <li>JSON(.json)</li>
    <li>YAML(.yaml)</li>
    <li>Weighted Edge List(.wel)</li>
    <li>ASP(.lp)</li>
    <li>Trivial Graph Format(.tgf)</li>
    <li>UCINET DL Format(.dl)</li>
    <li>Pickle(.p)</li>
    </ul>
    <p>See README.md from the Pyrgg repository for further details</p>
    <p>website : pyrgg.shaghighi.ir</p>
    <div class="figure">
    <img src="pyrgg-logo.png" alt="Pyrgg Logo" />
    <p class="caption">Pyrgg Logo</p>
    </div>
    <h1 id="references" class="unnumbered">References</h1>
    <div id="refs" class="references">
    <div id="ref-Chakrabarti2004">
    <p>Chakrabarti, Deepayan, Yiping Zhan, and Christos Faloutsos. 2004. “R-MAT: A Recursive Model for Graph Mining.” In <em>Proceedings of the 2004 SIAM International Conference on Data Mining</em>, 442–46. Society for Industrial; Applied Mathematics. doi:<a href="https://doi.org/10.1137/1.9781611972740.43">10.1137/1.9781611972740.43</a>.</p>
    </div>
    <div id="ref-Zhong2012">
    <p>Zhong, Jianlong, and Bingsheng He. 2012. “An Overview of Medusa.” <em>ACM SIGPLAN Notices</em> 47 (8). Association for Computing Machinery (ACM): 283. doi:<a href="https://doi.org/10.1145/2370036.2145855">10.1145/2370036.2145855</a>.</p>
    </div>
    </div>
  </body>
</article>
