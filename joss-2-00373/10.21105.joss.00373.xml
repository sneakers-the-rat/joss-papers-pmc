<?xml version="1.0" encoding="utf-8" ?>
<article>
  <articleinfo>
    <title>array_split: Multi-dimensional array partitioning</title>
    <authors>
      <author>
        <name>Shane J Latham</name>
        <orcid>0000-0001-8033-4665</orcid>
        <affiliation>
          <orgname>
            1
          </orgname>
        </affiliation>
      </author>
    </authors>
    <tags>
      <tag>multi-dimensional array</tag>
      <tag>partitioning</tag>
      <tag>tile</tag>
      <tag>tiling</tag>
      <tag>domain decomposition</tag>
      <tag>python</tag>
      <tag>ndarray</tag>
      <tag>numpy</tag>
    </tags>
    <date>12 September 2017</date>
    <paper_doi>10.21105/joss.00373</paper_doi>
    <software_repository>https://github.com/array-split/array_split</software_repository>
    <software_archive>http://dx.doi.org/10.5281/zenodo.889080</software_archive>
    <paper_url>https://github.com/openjournals/joss-papers/raw/master/joss.00373/10.21105.joss.00373.pdf</paper_url>
  </articleinfo>
  <body>
    <h1 id="summary">Summary</h1>
    <p>The <code>array_split</code> <span class="citation">(Latham 2017)</span> Python package extends existing dense array partitioning capabilities found in the <code>numpy</code> <span class="citation">(Walt, Colbert, and Varoquaux 2011)</span> (<code>numpy.array_split</code>) and <code>skimage</code> <span class="citation">(Van der Walt et al. 2014)</span> (<code>skimage.util.view_as_blocks</code>) Python packages. In particular, it provides the means for partitioning based on <em>array shape</em> (rather than requiring an actual <code>numpy.ndarray</code> object) and can partition into <em>sub-arrays</em> based on a variety of criteria including: per-axis number of partitions, total number of sub-arrays (with per-axis number of partition constraints), explicit sub-array shape and constraining a partitioning with an upper bound on the resulting sub-array number of bytes.</p>
    <p>Application areas include:</p>
    <dl>
    <dt>Parallel Processing</dt>
    <dd>Data parallelism by partitioning array for multi-process concurrency (e.g. <code>multiprocessing</code> <span class="citation">(“Multiprocessing – Process-Based Parallelism” 2017)</span> or <code>mpi4py</code> <span class="citation">(Dalcin et al. 2011)</span>) based on number of cores, or partitioning for accelerator hardware concurrency (e.g. <code>pyopencl</code> or <code>pycuda</code> [kloeckner_pycuda_2012]) based on hardware memory limits.
    </dd>
    <dt>File I/O</dt>
    <dd>Partitioning large arrays for output to separate files (e.g. as part of a <a href="https://support.hdfgroup.org/HDF5/docNewFeatures/NewFeaturesVirtualDatasetDocs.html" title="HDF5 Virtual Dataset (VDS) Documentation">virtual dataset</a> <span class="citation">(The HDF Group 1997–1997-NNNN, <span class="citation">Collette (2013)</span>)</span>) based on maximum file size, or out-of-core partitioning based on in-core memory limits.
    </dd>
    </dl>
    <h1 id="references" class="unnumbered">References</h1>
    <div id="refs" class="references">
    <div id="ref-collette_python_hdf5_2014">
    <p>Collette, Andrew. 2013. <em>Python and Hdf5</em>. O’Reilly.</p>
    </div>
    <div id="ref-dalcin2011parallel">
    <p>Dalcin, Lisandro D, Rodrigo R Paz, Pablo A Kler, and Alejandro Cosimo. 2011. “Parallel Distributed Computing Using Python.” <em>Advances in Water Resources</em> 34 (9). Elsevier: 1124–39. doi:<a href="https://doi.org/10.1016/j.advwatres.2011.04.013">10.1016/j.advwatres.2011.04.013</a>.</p>
    </div>
    <div id="ref-latham2017arraysplit">
    <p>Latham, Shane J. 2017. “array_split documentation.” <a href="http://array-split.readthedocs.io/en/latest/" class="uri">http://array-split.readthedocs.io/en/latest/</a>.</p>
    </div>
    <div id="ref-pythonmultiprocessingmodule">
    <p>“Multiprocessing – Process-Based Parallelism.” 2017. <a href="https://docs.python.org/3/library/multiprocessing.html" class="uri">https://docs.python.org/3/library/multiprocessing.html</a>.</p>
    </div>
    <div id="ref-hdf5">
    <p>The HDF Group. 1997–1997-NNNN. “Hierarchical Data Format, version 5.” <a href="http://www.hdfgroup.org/HDF5/" class="uri">http://www.hdfgroup.org/HDF5/</a>.</p>
    </div>
    <div id="ref-van2014scikit">
    <p>Van der Walt, Stefan, Johannes L Schönberger, Juan Nunez-Iglesias, François Boulogne, Joshua D Warner, Neil Yager, Emmanuelle Gouillart, and Tony Yu. 2014. “Scikit-Image: Image Processing in Python.” <em>PeerJ</em> 2. PeerJ Inc.: e453. doi:<a href="https://doi.org/10.7717/peerj.453">10.7717/peerj.453</a>.</p>
    </div>
    <div id="ref-walt2011numpy">
    <p>Walt, Stéfan van der, S Chris Colbert, and Gael Varoquaux. 2011. “The Numpy Array: A Structure for Efficient Numerical Computation.” <em>Computing in Science &amp; Engineering</em> 13 (2). IEEE: 22–30. doi:<a href="https://doi.org/10.1109/MCSE.2011.37">10.1109/MCSE.2011.37</a>.</p>
    </div>
    </div>
  </body>
</article>
