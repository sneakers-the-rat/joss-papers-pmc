<?xml version="1.0" encoding="utf-8" ?>
<article>
  <articleinfo>
    <title>Missingno: a missing data visualization suite</title>
    <authors>
      <author>
        <name>Aleksey Bilogur</name>
        <orcid>0000-0002-0066-5825</orcid>
        <affiliation>
          <orgname>
            1
          </orgname>
        </affiliation>
      </author>
    </authors>
    <tags>
      <tag>missing data</tag>
      <tag>data visualization</tag>
    </tags>
    <date>13 Febuary 2018</date>
    <paper_doi>10.21105/joss.00547</paper_doi>
    <software_repository>https://github.com/ResidentMario/missingno</software_repository>
    <software_archive>http://dx.doi.org/10.5281/zenodo.1184723</software_archive>
    <paper_url>http://www.theoj.org/joss-papers/joss.00547/10.21105.joss.00547.pdf</paper_url>
  </articleinfo>
  <body>
    <h1 id="summary">Summary</h1>
    <p>Algorithmic models and outputs are only as good as the data they are computed on. As the popular saying goes: garbage in, garbage out. In tabular datasets, it is usually relatively easy to, at a glance, understand patterns of missing data (or nullity) of individual rows, columns, and entries. However, it is far harder to see patterns in the missingness of data that extend between them. Understanding such patterns in data is beneficial, if not outright critical, to most applications.</p>
    <p>missingno is a Python package for visualizing missing data. It works by converting tabular data matrices into boolean masks based on whether individual entries contain data (which evaluates to true) or left empty (which evaluates to false). This “nullity matrix” is then exposed to user assessment through a variety of special-purpose data visualizations.</p>
    <p>The simplest tool, the bar chart, is a snapshot of column-level information:</p>
    <p><img src="https://i.imgur.com/2BxEfOr.png" /></p>
    <p>The matrix display provides a literal translations of a data table’s nullity matrix. It is useful for snapshotting general patterns:</p>
    <p><img src="https://i.imgur.com/gWuXKEr.png" /></p>
    <p>A heatmap provides a methodology for examining relationships within pairs of variables.</p>
    <p><img src="https://i.imgur.com/JalSKyE.png" /></p>
    <p>Higher-cardinality data nullity correlations can be understood using a hierarchically clustered dendrogram:</p>
    <p><img src="https://i.imgur.com/oIiR4ct.png" /></p>
    <p>Finally, geospatial data dependencies are viewable using an approach based on the quadtree or convex hull algorithm:</p>
    <p><img src="https://i.imgur.com/0aaNa9Q.png" /></p>
    <p>The visualizations are consciously designed to be as effective as possible at uncovering missing data patterns both between and within columns of data, and hence, to help its users build more effective data models and pipelines. At the same time the package is designed to be easy to use. The underlying packages involved (NumPy <span class="citation" data-cites="numpy">(Stéfan van der Walt and Varoquaux 2011)</span>, pandas <span class="citation" data-cites="pandas">(McKinney 2010)</span>, SciPy <span class="citation" data-cites="scipy">(Jones et al. 2001–2001--)</span>, matplotlib <span class="citation" data-cites="matplotlib">(Hunter 2007)</span>, and seaborn <span class="citation" data-cites="seaborn">(Waskom and others 2017)</span>) are familiar parts of the core scientific Python ecosystem, and hence very learnable and extensible. missingno works “out of the box” with a variety of data types and formats, and provides an extremely compact API.</p>
    <h1 id="references" class="unnumbered">References</h1>
    <div id="refs" class="references">
    <div id="ref-matplotlib">
    <p>Hunter, John D. 2007. “Matplotlib: A 2D Graphics Environment” 9. <a href="https://doi.org/10.1109/MCSE.2007.55" class="uri">https://doi.org/10.1109/MCSE.2007.55</a>.</p>
    </div>
    <div id="ref-scipy">
    <p>Jones, Eric, Travis Oliphant, Pearu Peterson, and others. 2001–2001--. “SciPy: Open Source Scientific Tools for Python.” <a href="http://www.scipy.org/" class="uri">http://www.scipy.org/</a>.</p>
    </div>
    <div id="ref-pandas">
    <p>McKinney, Wes. 2010. “Data Structures for Statistical Computing in Python.” <em>Proceedings of the 9th Python in Science Conference</em>.</p>
    </div>
    <div id="ref-numpy">
    <p>Stéfan van der Walt, S. Chris Colbert, and Gaël Varoquaux. 2011. “The Numpy Array: A Structure for Efficient Numerical Computation” 13. <a href="https://doi.org/10.1109/MCSE.2011.37" class="uri">https://doi.org/10.1109/MCSE.2011.37</a>.</p>
    </div>
    <div id="ref-seaborn">
    <p>Waskom, Michael, and others. 2017. “Mwaskom/Seaborn: V0.8.1 (September 2017).” <a href="https://doi.org/10.5281/zenodo.883859" class="uri">https://doi.org/10.5281/zenodo.883859</a>.</p>
    </div>
    </div>
  </body>
</article>
