<?xml version="1.0" encoding="utf-8" ?>
<article>
  <articleinfo>
    <title>Helper for Bézier Curves, Triangles, and Higher Order Objects</title>
    <authors>
      <author>
        <name>Danny Hermes</name>
        <orcid>0000-0001-7366-173X</orcid>
        <affiliation>
          <orgname>
            1
          </orgname>
        </affiliation>
      </author>
    </authors>
    <tags>
      <tag>algebra</tag>
      <tag>bezier</tag>
      <tag>curve</tag>
      <tag>parametric curve</tag>
      <tag>numerical software</tag>
      <tag>Python</tag>
      <tag>Fortran</tag>
    </tags>
    <date>22 May 2017</date>
    <paper_doi>10.21105/joss.00267</paper_doi>
    <software_repository>https://github.com/dhermes/bezier</software_repository>
    <software_archive>http://dx.doi.org/10.5281/zenodo.838308</software_archive>
    <paper_url>https://github.com/openjournals/joss-papers/raw/master/joss.00267/10.21105.joss.00267.pdf</paper_url>
  </articleinfo>
  <body>
    <h1 id="summary">Summary</h1>
    <p><code>bezier</code> is a Python helper for Bézier <a href="https://en.wikipedia.org/wiki/B%C3%A9zier_curve">curves</a> and <a href="https://en.wikipedia.org/wiki/B%C3%A9zier_triangle">surfaces</a> <span class="citation">(T. W. Sederberg 2016, <span class="citation">Farin (2001)</span>)</span>. Bézier curves (and surfaces) are parametric curves with polynomial components, but they are expressed in terms of the Bernstein basis rather than the traditional power basis. In addition to being more numerically stable <span class="citation">(R. Farouki and Rajan 1987, <span class="citation">R. Farouki (1991)</span>, <span class="citation">R. T. Farouki and Goodman (1996)</span>)</span>, this basis allows &quot;intuitive&quot; manipulation of geometric shapes by controlling a set of points rather than via algebraic techniques.</p>
    <p>Bézier curves and surfaces have been widely used for decades <span class="citation">(Rida T. Farouki 2012)</span> in industrial design (e.g. shape), computer fonts and graphics, mathematics (e.g. isoparametric elements in finite elements), and many other fields.</p>
    <p>This library provides support for</p>
    <ul>
    <li>2D plotting</li>
    <li>2D <a href="https://bezier.readthedocs.io/en/0.4.0/curve-curve-intersection.html">intersection</a> (via both geometric <span class="citation">(T. Sederberg 1989, <span class="citation">T. Sederberg and Nishita (1990)</span>, <span class="citation">Kim, Lee, and Shin (1998)</span>, <span class="citation">T. W. Sederberg and Parry (1986)</span>)</span> and algebraic <span class="citation">(Jónsson and Vavasis 2005, <span class="citation">Manocha and Demmel (1992)</span>)</span> algorithms)</li>
    <li>Curve and surface subdivision <span class="citation">(R. T. Farouki and Neff 1990)</span></li>
    <li>Degree-elevation and reduction</li>
    <li>Evaluation of points on curves / surfaces</li>
    <li>Determining parameters corresponding to a point on a <a href="https://bezier.readthedocs.io/en/0.4.0/reference/bezier.curve.html#bezier.curve.Curve.locate">on a curve</a> or <a href="https://bezier.readthedocs.io/en/0.4.0/reference/bezier.surface.html#bezier.surface.Surface.locate">on a surface</a> (i.e. the inverse of evaluation)</li>
    <li>Specialization / reparameterization</li>
    <li>Self-intersection / singularity check for 2D surfaces</li>
    </ul>
    <p>-<img src="https://cdn.rawgit.com/dhermes/bezier/0.4.0/docs/images/test_surfaces6Q_and_7Q.png" alt="Surface-surface intersection example" /></p>
    <h1 id="references" class="unnumbered">References</h1>
    <div id="refs" class="references">
    <div id="ref-Farin2001">
    <p>Farin, Gerald. 2001. <em>Curves and Surfaces for Cagd, Fifth Edition: A Practical Guide (the Morgan Kaufmann Series in Computer Graphics)</em>. Morgan Kaufmann. <a href="https://www.amazon.com/Curves-Surfaces-CAGD-Fifth-Practical/dp/1558607374" class="uri">https://www.amazon.com/Curves-Surfaces-CAGD-Fifth-Practical/dp/1558607374</a>.</p>
    </div>
    <div id="ref-Farouki1996">
    <p>Farouki, R. T., and T. N. T. Goodman. 1996. “On the Optimal Stability of the Bernstein Basis.” <em>Mathematics of Computation</em> 65 (216). American Mathematical Society (AMS): 1553–67. doi:<a href="https://doi.org/10.1090/s0025-5718-96-00759-4">10.1090/s0025-5718-96-00759-4</a>.</p>
    </div>
    <div id="ref-Farouki1990">
    <p>Farouki, R. T., and C. A. Neff. 1990. “On the Numerical Condition of Bernstein-Bézier Subdivision Processes.” <em>Mathematics of Computation</em> 55 (192). JSTOR: 637. doi:<a href="https://doi.org/10.2307/2008438">10.2307/2008438</a>.</p>
    </div>
    <div id="ref-Farouki1991">
    <p>Farouki, R.T. 1991. “On the Stability of Transformations Between Power and Bernstein Polynomial Forms.” <em>Computer Aided Geometric Design</em> 8 (1). Elsevier BV: 29–36. doi:<a href="https://doi.org/10.1016/0167-8396(91)90047-f">10.1016/0167-8396(91)90047-f</a>.</p>
    </div>
    <div id="ref-Farouki1987">
    <p>Farouki, R.T., and V.T. Rajan. 1987. “On the Numerical Condition of Polynomials in Bernstein Form.” <em>Computer Aided Geometric Design</em> 4 (3). Elsevier BV: 191–216. doi:<a href="https://doi.org/10.1016/0167-8396(87)90012-4">10.1016/0167-8396(87)90012-4</a>.</p>
    </div>
    <div id="ref-Farouki2012">
    <p>Farouki, Rida T. 2012. “The Bernstein Polynomial Basis: A Centennial Retrospective.” <em>Computer Aided Geometric Design</em> 29 (6). Elsevier BV: 379–419. doi:<a href="https://doi.org/10.1016/j.cagd.2012.03.001">10.1016/j.cagd.2012.03.001</a>.</p>
    </div>
    <div id="ref-JonssonVavasis">
    <p>Jónsson, GuđbjörnF., and Stephen A. Vavasis. 2005. “Accurate Solution of Polynomial Equations Using Macaulay Resultant Matrices.” <em>Mathematics of Computation</em> 74 (249). American Mathematical Society: 221–62. <a href="https://www.jstor.org/stable/4100244" class="uri">https://www.jstor.org/stable/4100244</a>.</p>
    </div>
    <div id="ref-Kim1998">
    <p>Kim, Deok-Soo, Soon-Woong Lee, and Hayong Shin. 1998. “A Cocktail Algorithm for Planar Bézier Curve Intersections.” <em>Computer-Aided Design</em> 30 (13). Elsevier BV: 1047–51. doi:<a href="https://doi.org/10.1016/s0010-4485(98)00052-9">10.1016/s0010-4485(98)00052-9</a>.</p>
    </div>
    <div id="ref-Manocha:CSD-92-698">
    <p>Manocha, Dinesh, and James W. Demmel. 1992. “Algorithms for Intersecting Parametric and Algebraic Curves.” UCB/CSD-92-698. EECS Department, University of California, Berkeley. <a href="https://www2.eecs.berkeley.edu/Pubs/TechRpts/1992/6266.html" class="uri">https://www2.eecs.berkeley.edu/Pubs/TechRpts/1992/6266.html</a>.</p>
    </div>
    <div id="ref-Sederberg1989">
    <p>Sederberg, T.W. 1989. “Algorithm for Algebraic Curve Intersection.” <em>Computer-Aided Design</em> 21 (9). Elsevier BV: 547–54. doi:<a href="https://doi.org/10.1016/0010-4485(89)90015-8">10.1016/0010-4485(89)90015-8</a>.</p>
    </div>
    <div id="ref-Sederberg1990">
    <p>Sederberg, T.W., and T. Nishita. 1990. “Curve Intersection Using Bézier Clipping.” <em>Computer-Aided Design</em> 22 (9). Elsevier BV: 538–49. doi:<a href="https://doi.org/10.1016/0010-4485(90)90039-f">10.1016/0010-4485(90)90039-f</a>.</p>
    </div>
    <div id="ref-SederbergNotes">
    <p>Sederberg, Thomas W. 2016. “Lecture Notes: Computer Aided Geometric Design.” Department of Computer Science, Brigham Young University. <a href="http://tom.cs.byu.edu/~557/text/cagd.pdf" class="uri">http://tom.cs.byu.edu/~557/text/cagd.pdf</a>.</p>
    </div>
    <div id="ref-Sederberg1986">
    <p>Sederberg, Thomas W, and Scott R Parry. 1986. “Comparison of Three Curve Intersection Algorithms.” <em>Computer-Aided Design</em> 18 (1). Elsevier BV: 58–63. doi:<a href="https://doi.org/10.1016/s0010-4485(86)80013-6">10.1016/s0010-4485(86)80013-6</a>.</p>
    </div>
    </div>
  </body>
</article>
