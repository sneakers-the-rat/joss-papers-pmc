<?xml version="1.0" encoding="utf-8" ?>
<article>
  <articleinfo>
    <title>Representation and Manipulation of Genomic Tuples in R</title>
    <authors>
      <author>
        <name>Peter F Hickey</name>
        <orcid>0000-0002-8153-6258</orcid>
        <affiliation>
          <orgname>
            Department of Biostatistics, Johns Hopkins Bloomberg School of Public Health
          </orgname>
        </affiliation>
      </author>
    </authors>
    <tags>
      <tag>bioinformatics</tag>
      <tag>computational biology</tag>
    </tags>
    <date>17 May 2016</date>
    <paper_doi>10.21105/joss.00020</paper_doi>
    <software_repository>https://github.com/PeteHaitch/GenomicTuples</software_repository>
    <software_archive>http://dx.doi.org/10.5281/zenodo.53186</software_archive>
    <paper_url>https://github.com/openjournals/joss-papers/blob/master/joss.00020/10.21105.joss.00020.pdf</paper_url>
  </articleinfo>
  <body>
    <h1 id="summary">Summary</h1>
    <p><strong>GenomicTuples</strong> is an R/Bioconductor package <span class="citation">(R Core Team 2016; Wolfgang Huber et al 2015)</span> that defines general purpose containers for storing and manipulating <em>genomic tuples</em>. A genomic tuple of size <code>m</code> is of the form <code>chromosome:strand:{pos_1, pos_2, ..., pos_m}</code> where <code>pos_1</code> &lt; <code>pos_2</code> &lt; <code>...</code> &lt; <code>pos_m</code> are positions along the chromosome. The difference between a genomic tuple and a genomic range/interval is like that of a difference between an ordered set and an interval. For example, the genomic 2-tuple <code>chr3:+:{65, 77}</code> differs from the genomic range <code>chr3:+:[65, 77]</code> by not including any of the intervening loci, <code>chr3:+:66</code> to <code>chr3:+:76</code>.</p>
    <p><strong>GenomicTuples</strong> aims to provide functionality for manipulating tuples of genomic co-ordinates that are analogous to those available for genomic ranges in the popular <strong>GenomicRanges</strong> R/Bioconductor package <span class="citation">(Lawrence et al. 2013)</span>. To that end, the GenomicTuples API mimics that of <strong>GenomicRanges</strong>. By extending classes defined in the <strong>GenomicRanges</strong> package, objects from the <strong>GenomicTuples</strong> package may be used as drop-in replacements for objects from the <strong>GenomicRanges</strong> package. This ensures easy interoperability with other popular Bioconductor packages, such as <strong>SummarizedExperiment</strong> <span class="citation">(Morgan et al. 2016)</span>, and the availability of common operations, such as finding overlaps between genomic tuples and genomic features of interest.</p>
    <h1 id="references" class="unnumbered">References</h1>
    <div id="refs" class="references">
    <div id="ref-GenomicRanges">
    <p>Lawrence, Michael, Wolfgang Huber, Hervé Pagès, Patrick Aboyoun, Marc Carlson, Robert Gentleman, Martin Morgan, and Vincent Carey. 2013. “Software for Computing and Annotating Genomic Ranges.” <em>PLoS Computational Biology</em> 9 (8). doi:<a href="https://doi.org/10.1371/journal.pcbi.1003118">10.1371/journal.pcbi.1003118</a>.</p>
    </div>
    <div id="ref-SummarizedExperiment">
    <p>Morgan, Martin, Valerie Obenchain, Jim Hester, and Hervé Pagès. 2016. <em>SummarizedExperiment: SummarizedExperiment Container</em>.</p>
    </div>
    <div id="ref-R">
    <p>R Core Team. 2016. <em>R: A Language and Environment for Statistical Computing</em>. Vienna, Austria: R Foundation for Statistical Computing. <a href="https://www.R-project.org/" class="uri">https://www.R-project.org/</a>.</p>
    </div>
    <div id="ref-Bioconductor">
    <p>Wolfgang Huber et al. 2015. “Orchestrating High-Throughput Genomic Analysis with Bioconductor.” <em>Nature Methods</em> 12 (2): 115–21. doi:<a href="https://doi.org/10.1038/nmeth.3252">10.1038/nmeth.3252</a>.</p>
    </div>
    </div>
  </body>
</article>
