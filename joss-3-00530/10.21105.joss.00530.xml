<?xml version="1.0" encoding="utf-8" ?>
<article>
  <articleinfo>
    <title>PyDMD: Python Dynamic Mode Decomposition</title>
    <authors>
      <author>
        <name>Nicola Demo</name>
        <orcid>0000-0003-3107-9738</orcid>
        <affiliation>
          <orgname>
            1
          </orgname>
        </affiliation>
      </author>
      <author>
        <name>Marco Tezzele</name>
        <orcid>0000-0001-9747-6328</orcid>
        <affiliation>
          <orgname>
            1
          </orgname>
        </affiliation>
      </author>
      <author>
        <name>Gianluigi Rozza</name>
        <orcid>0000-0002-0810-8812</orcid>
        <affiliation>
          <orgname>
            1
          </orgname>
        </affiliation>
      </author>
    </authors>
    <tags>
      <tag>Dynamic mode decomposition</tag>
      <tag>DMD</tag>
      <tag>Multiresolution DMD</tag>
      <tag>Compressed DMD</tag>
      <tag>Forward Backward DMD</tag>
    </tags>
    <date>8 January 2018</date>
    <paper_doi>10.21105/joss.00530</paper_doi>
    <software_repository>https://github.com/mathLab/PyDMD</software_repository>
    <software_archive>http://dx.doi.org/10.5281/zenodo.1171787</software_archive>
    <paper_url>http://www.theoj.org/joss-papers/joss.00530/10.21105.joss.00530.pdf</paper_url>
  </articleinfo>
  <body>
    <h1 id="summary">Summary</h1>
    <p>Dynamic mode decomposition (DMD) is a model reduction algorithm developed by Schmid <span class="citation" data-cites="schmid2010dynamic">(Schmid 2010)</span>. Since then has emerged as a powerful tool for analyzing the dynamics of nonlinear systems. It is used for a data-driven model simplification based on spatiotemporal coherent structures. DMD relies only on the high-fidelity measurements, like experimental data and numerical simulations, so it is an equation-free algorithm. Its popularity is also due to the fact that it does not make any assumptions about the underlying system. See <span class="citation" data-cites="kutz2016dynamic">(Kutz et al. 2016)</span> for a comprehensive overview of the algorithm and its connections to the Koopman-operator analysis, initiated in <span class="citation" data-cites="koopman1931hamiltonian">(Koopman 1931)</span>, along with examples in computational fluid dynamics.</p>
    <p>In the last years many variants arose, such as multiresolution DMD, compressed DMD, forward backward DMD, and higher order DMD among others, in order to deal with noisy data, big dataset, or spurius data for example.</p>
    <p>In the PyDMD package <span class="citation" data-cites="pydmd">(“PyDMD: Python Dynamic Mode Decomposition. Available at: <a href="https://github.com/mathLab/PyDMD" class="uri">https://github.com/mathLab/PyDMD</a>” n.d.)</span> we implemented in Python the majority of the variants mentioned above with a user friendly interface. We also provide many tutorials that show all the characteristics of the software, ranging from the basic use case to the most sofisticated one allowed by the package.</p>
    <p>The research in the field is growing both in computational fluid dynamic and in structural mechanics, due to the equation-free nature of the model.</p>
    <p>As an exmaple, we show below few snapshots collected from a toy system with some noise. The DMD is able to reconstruct the entire system evolution, filtering the noise. It is also possible to predict the evolution of the system in the future with respect to the available data.</p>
    <figure>
    <img src="../readme/dmd-example.png" alt="Snapshots" /><figcaption>Snapshots</figcaption>
    </figure>
    <p>Here we have the reconstruction of the dynamical system. You can observe the sensible reduction of the noise.</p>
    <figure>
    <img src="../readme/dmd-reconstruction.png" alt="Reconstruction" /><figcaption>Reconstruction</figcaption>
    </figure>
    <h1 id="acknowledgements">Acknowledgements</h1>
    <p>This work was partially supported by European Union Funding for Research and Innovation — Horizon 2020 Program — in the framework of European Research Council Executive Agency: H2020 ERC CoG 2015 AROMA-CFD project 681447 “Advanced Reduced Order Methods with Applications in Computational Fluid Dynamics” P.I. Gianluigi Rozza.</p>
    <h1 id="references" class="unnumbered">References</h1>
    <div id="refs" class="references">
    <div id="ref-koopman1931hamiltonian">
    <p>Koopman, Bernard O. 1931. “Hamiltonian Systems and Transformation in Hilbert Space.” <em>Proceedings of the National Academy of Sciences</em> 17 (5). National Acad Sciences:315–18.</p>
    </div>
    <div id="ref-kutz2016dynamic">
    <p>Kutz, J Nathan, Steven L Brunton, Bingni W Brunton, and Joshua L Proctor. 2016. <em>Dynamic Mode Decomposition: Data-Driven Modeling of Complex Systems</em>. SIAM. <a href="https://doi.org/10.1137/1.9781611974508" class="uri">https://doi.org/10.1137/1.9781611974508</a>.</p>
    </div>
    <div id="ref-pydmd">
    <p>“PyDMD: Python Dynamic Mode Decomposition. Available at: <a href="https://github.com/mathLab/PyDMD" class="uri">https://github.com/mathLab/PyDMD</a>.” n.d. Accessed January 2018.</p>
    </div>
    <div id="ref-schmid2010dynamic">
    <p>Schmid, Peter J. 2010. “Dynamic Mode Decomposition of Numerical and Experimental Data.” <em>Journal of Fluid Mechanics</em> 656. Cambridge University Press:5–28. <a href="https://doi.org/10.1017/S0022112010001217" class="uri">https://doi.org/10.1017/S0022112010001217</a>.</p>
    </div>
    </div>
  </body>
</article>
