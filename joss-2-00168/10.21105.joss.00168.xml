<?xml version="1.0" encoding="utf-8" ?>
<article>
  <articleinfo>
    <title>bíogo/hts: high throughput sequence handling for the Go language</title>
    <authors>
      <author>
        <name>R Daniel Kortschak</name>
        <orcid>0000-0001-8295-2301</orcid>
        <affiliation>
          <orgname>
            1
          </orgname>
        </affiliation>
      </author>
      <author>
        <name>Brent S Pedersen</name>
        <orcid>0000-0003-1786-2216</orcid>
        <affiliation>
          <orgname>
            2
          </orgname>
        </affiliation>
      </author>
      <author>
        <name>David L Adelson</name>
        <orcid>0000-0003-2404-5636</orcid>
        <affiliation>
          <orgname>
            1
          </orgname>
        </affiliation>
      </author>
    </authors>
    <tags>
      <tag>bioinformatics</tag>
      <tag>toolkit</tag>
      <tag>golang</tag>
    </tags>
    <date>6 January 2017</date>
    <paper_doi>10.21105/joss.00168</paper_doi>
    <software_repository>https://github.com/biogo/hts</software_repository>
    <software_archive>http://dx.doi.org/10.5281/zenodo.268032</software_archive>
    <paper_url>https://github.com/openjournals/joss-papers/blob/master/joss.00168/10.21105.joss.00168.pdf</paper_url>
  </articleinfo>
  <body>
    <h1 id="summary">Summary</h1>
    <p>bíogo/hts provides a Go native implementation of the SAM specification <span class="citation">(Group 2016)</span> for SAM and BAM alignment formats <span class="citation">(H. et al. 2012)</span> commonly used for representation of high throughput genomic data, the BAI, CSI and tabix indexing formats, and the BGZF blocked compression format. The bíogo/hts packages perform parallelized read and write operations and are able to cache recent reads according to user-specified caching methods. The parallelisation approach used by the bíogo/hts package is influenced by the approach of the D implementation, sambamba by Tarazov et al. <span class="citation">(T. A. et al. 2015)</span>. The bíogo/hts APIs have been constructed to provide a consistent interface to sequence alignment data and the underlying compression system in order to aid ease of use and tool development.</p>
    <h1 id="references" class="unnumbered">References</h1>
    <div id="refs" class="references">
    <div id="ref-tarasov">
    <p>A., Tarasov, Vilella A., Cuppen E., Nijman I. J., and Prins P. 2015. “Sambamba: Fast Processing of Ngs Alignment Formats.” <em>Bioinformatics</em> 31 (12): 2032–4. doi:<a href="https://doi.org/10.1093/bioinformatics/btv098">10.1093/bioinformatics/btv098</a>.</p>
    </div>
    <div id="ref-SAMspec">
    <p>Group, The SAM/BAM Format Specification Working. 2016. “Sequence Alignment/Map Format Specification.” <a href="https://samtools.github.io/hts-specs/SAMv1.pdf" class="uri">https://samtools.github.io/hts-specs/SAMv1.pdf</a>.</p>
    </div>
    <div id="ref-li">
    <p>H., Li, Handsaker B., Wysoker A., Fennell T., Ruan J., Homer N., Marth G., Abecasis G., Durbin R., and 1000 Genome Project Data Processing Subgroup. 2012. “The Sequence Alignment/Map Format and Samtools.” <em>Bioinformatics</em> 25 (16): 2078–9. doi:<a href="https://doi.org/10.1093/bioinformatics/btp352">10.1093/bioinformatics/btp352</a>.</p>
    </div>
    </div>
  </body>
</article>
