<?xml version="1.0" encoding="utf-8" ?>
<article>
  <articleinfo>
    <title>Moltres: finite element based simulation of molten salt reactors</title>
    <authors>
      <author>
        <name>Alexander Lindsay</name>
        <orcid>0000-0002-6988-2123</orcid>
        <affiliation>
          <orgname>
            1
          </orgname>
        </affiliation>
      </author>
      <author>
        <name>Kathryn Huff</name>
        <orcid>0000-0002-7075-6802</orcid>
        <affiliation>
          <orgname>
            1
          </orgname>
        </affiliation>
      </author>
    </authors>
    <tags>
      <tag>finite elements</tag>
      <tag>molten salt reactors</tag>
      <tag>neutron diffusion</tag>
    </tags>
    <date>24 May 2017</date>
    <paper_doi>10.21105/joss.00298</paper_doi>
    <software_repository>https://github.com/arfc/moltres</software_repository>
    <software_archive>http://dx.doi.org/10.5281/zenodo.1137726</software_archive>
    <paper_url>http://www.theoj.org/joss-papers/joss.00298/10.21105.joss.00298.pdf</paper_url>
  </articleinfo>
  <body>
    <h1 id="summary">Summary</h1>
    <p>Moltres is a physics application for multiphysics modeling of fluid-fueled molten salt reactors (MSRs) <span class="citation" data-cites="moltres">(Lindsay et al. 2018)</span>. It couples equations for neutron diffusion, thermal hydraulics, and delayed neutron precursor transport. Neutron diffusion and precursor transport equations are set-up using an action system that allows the user to use an arbitrary number of neutron energy and precursor groups respectively with minimal input changes. Moltres sits on top of the Multi-physics Object-Oriented Simulation Environment <span class="citation" data-cites="moose">(Gaston et al. 2015)</span> and hence uses the finite element method to discretize the governing partial differential equations. In general the resulting system of non-linear algebraic equations is linearized using the Newton-Raphson method and then solved using the Portable, Extensible Toolkit for Scientific Computation <span class="citation" data-cites="petsc">(Balay et al. 2017)</span>. Assembly of the Jacobian and residual, and the linear solve are parallelized using MPI which allows Moltres to be run in massively parallel environments. Runs on the Blue Waters supercomputer at Illinois have utilized up to 608 cores.</p>
    <p>Moltres and MOOSE allow use of different basis functions for different system variables. Because of the purely diffusive nature of the neutron diffusion equations, neutron fluxes are typically discretized using continuous first-degree Lagrange polynomials and the degrees of freedom are associated with mesh nodes. The temperature variable may also be discretized with a continuous Lagrange basis, or a discontinuous basis of arbitrary degree monomials may be employed depending on the relative balance of heat convection to conduction. The purely hyperbolic precursor transport is currently discretized using constant monomials, which is equivalent to a first-order finite volume discretization. Moltres supports both segregated (through Picard iteration) and monolithic solutions of the equation system. However, due to the feedback between the power spectrum and temperature dependence of macroscopic cross-sections, monolithic solves have demonstrated superior robustness with segregated techniques often unable to converge to a solution. This result emphasizes the importance of a fully coupled multi-physics framework like the one that Moltres and MOOSE provide and suggests that iteratively coupling codes devoted to single physics <span class="citation" data-cites="kophazi_development_2009">(Kópházi, Lathouwers, and Kloosterman 2009)</span> may result in limited flexibility.</p>
    <h1 id="references" class="unnumbered">References</h1>
    <div id="refs" class="references">
    <div id="ref-petsc">
    <p>Balay, Satish, Shrirang Abhyankar, Mark F. Adams, Jed Brown, Peter Brune, Kris Buschelman, Lisandro Dalcin, et al. 2017. “PETSc Users Manual.” ANL-95/11 - Revision 3.8. Argonne National Laboratory. <a href="http://www.mcs.anl.gov/petsc" class="uri">http://www.mcs.anl.gov/petsc</a>.</p>
    </div>
    <div id="ref-moose">
    <p>Gaston, Derek R., Cody J. Permann, John W. Peterson, Andrew E. Slaughter, David Andrš, Yaqi Wang, Michael P. Short, et al. 2015. “Physics-Based Multiscale Coupling for Full Core Nuclear Reactor Simulation.” <em>Annals of Nuclear Energy</em>, Multi-Physics Modelling of LWR Static and Transient Behaviour, 84 (October):45–54. <a href="https://doi.org/10.1016/j.anucene.2014.09.060" class="uri">https://doi.org/10.1016/j.anucene.2014.09.060</a>.</p>
    </div>
    <div id="ref-kophazi_development_2009">
    <p>Kópházi, J., D. Lathouwers, and J.L. Kloosterman. 2009. “Development of a Three-Dimensional Time-Dependent Calculation Scheme for Molten Salt Reactors and Validation of the Measurement Data of the Molten Salt Reactor Experiment.” <em>Nuclear Science and Engineering</em> 163 (2):118–31. <a href="https://doi.org/10.13182/NSE163-118" class="uri">https://doi.org/10.13182/NSE163-118</a>.</p>
    </div>
    <div id="ref-moltres">
    <p>Lindsay, Alexander, Gavin Ridley, Andrei Rykhlevskii, and Kathryn Huff. 2018. “Introduction to Moltres: An Application for Simulation of Molten Salt Reactors.” <em>Annals of Nuclear Energy</em> 114:530–40. <a href="https://doi.org/https://doi.org/10.1016/j.anucene.2017.12.025" class="uri">https://doi.org/https://doi.org/10.1016/j.anucene.2017.12.025</a>.</p>
    </div>
    </div>
  </body>
</article>
