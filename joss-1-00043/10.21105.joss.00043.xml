<?xml version="1.0" encoding="utf-8" ?>
<article>
  <articleinfo>
    <title>PyGBe: Python, GPUs and Boundary elements for biomolecular electrostatics</title>
    <authors>
      <author>
        <name>Christopher D. Cooper</name>
        <orcid>0000-0003-0282-8998</orcid>
        <affiliation>
          <orgname>
            Universidad Técnica Federico Santa María
          </orgname>
        </affiliation>
      </author>
      <author>
        <name>Natalia C. Clementi</name>
        <orcid>0000-0002-0575-5520</orcid>
        <affiliation>
          <orgname>
            The George Washington University
          </orgname>
        </affiliation>
      </author>
      <author>
        <name>Gilbert Forsyth</name>
        <orcid>0000-0002-4983-1978</orcid>
        <affiliation>
          <orgname>
            The George Washington University
          </orgname>
        </affiliation>
      </author>
      <author>
        <name>Lorena A. Barba</name>
        <orcid>0000-0001-5812-2711</orcid>
        <affiliation>
          <orgname>
            The George Washington University
          </orgname>
        </affiliation>
      </author>
    </authors>
    <tags>
      <tag>electrostatics</tag>
      <tag>biophysics</tag>
      <tag>Poisson-Boltzmann</tag>
    </tags>
    <date>14 July 2016</date>
    <paper_doi>10.21105/joss.00043</paper_doi>
    <software_repository>https://github.com/barbagroup/pygbe</software_repository>
    <software_archive>http://dx.doi.org/10.5281/zenodo.60474</software_archive>
    <paper_url>https://github.com/openjournals/joss-papers/blob/master/joss.00043/10.21105.joss.00043.pdf</paper_url>
  </articleinfo>
  <body>
    <h1 id="summary">Summary</h1>
    <p>PyGBe—pronounced <em>pigbē</em>—is a Python code to apply the boundary element method for molecular-electrostatics calculations in a continuum model. It computes solvation energies for proteins modeled with any number of dielectric regions, which is relevant in calculations of protein binding affinity, protein-surface interaction, acid-dissociation contants, among other applications. The mathematical formulation follows <span class="citation">Yoon and Lenhoff (1990)</span> for solving the Poisson-Boltzmann equation of the <a href="https://en.wikipedia.org/wiki/Implicit_solvation">implicit-solvent</a> model in integral form.</p>
    <p>PyGBe achieves both algorithmic and hardware acceleration, as detailed in <span class="citation">Cooper, Bardhan, and Barba (2014)</span>. The solution algorithm uses a <a href="https://en.wikipedia.org/wiki/Barnes–Hut_simulation">Barnes-Hut</a> treecode from <span class="citation">Barnes and Hut (1986)</span> to accelerate each iteration of a GMRES solver to O(N logN), for N unknowns. It exploits NVIDIA GPU hardware on the most computationally intensive parts of the code using CUDA kernels in the treecode, interfacing with PyCUDA (see <span class="citation">Klöckner et al. (2012)</span>). Some parts of the code are written in C++, wrapped using SWIG.</p>
    <h1 id="references" class="unnumbered">References</h1>
    <div id="refs" class="references">
    <div id="ref-BarnesHut1986">
    <p>Barnes, J., and P. Hut. 1986. “A Hierarchical <span class="math inline"><em>O</em>(<em>N</em>log<em>N</em>)</span> Force-Calculation Algorithm.” <em>Nature</em> 324 (December): 446–49. doi:<a href="https://doi.org/10.1038/324446a0">10.1038/324446a0</a>.</p>
    </div>
    <div id="ref-CooperBardhanBarba2014">
    <p>Cooper, Christopher D., Jaydeep P. Bardhan, and L. A. Barba. 2014. “A Biomolecular Electrostatics Solver Using Python, GPUs and Boundary Elements That Can Handle Solvent-Filled Cavities and Stern Layers.” <em>Comput. Phys. Commun.</em> 185 (3): 720–29. doi:<a href="https://doi.org/10.1016/j.cpc.2013.10.028">10.1016/j.cpc.2013.10.028</a>.</p>
    </div>
    <div id="ref-kloeckner_pycuda_2012">
    <p>Klöckner, Andreas, Nicolas Pinto, Yunsup Lee, B. Catanzaro, Paul Ivanov, and Ahmed Fasih. 2012. “PyCUDA and PyOpenCL: A Scripting-Based Approach to GPU Run-Time Code Generation.” <em>Parallel Computing</em> 38 (3): 157–74. doi:<a href="https://doi.org/10.1016/j.parco.2011.09.001">10.1016/j.parco.2011.09.001</a>.</p>
    </div>
    <div id="ref-YoonLenhoff1990">
    <p>Yoon, B J., and A. M. Lenhoff. 1990. “A Boundary Element Method for Molecular Electrostatics with Electrolyte Effects.” <em>J. Comput. Chem.</em> 11 (9): 1080–6. doi:<a href="https://doi.org/10.1002/jcc.540110911">10.1002/jcc.540110911</a>.</p>
    </div>
    </div>
  </body>
</article>
